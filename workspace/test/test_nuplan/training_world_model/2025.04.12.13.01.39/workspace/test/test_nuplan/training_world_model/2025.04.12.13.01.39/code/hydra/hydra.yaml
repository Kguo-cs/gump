hydra:
  run:
    dir: ${output_dir}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  searchpath:
  - pkg://nuplan.planning.script.config.common
  - pkg://nuplan.planning.script.config.training
  - pkg://nuplan_extent.planning.script.experiments
  - pkg://nuplan_extent.planning.script.config.training
  - pkg://nuplan_extent.planning.script.config.common
  - pkg://nuplan_extent.planning.script.config.common_cfg
  - pkg://nuplan_extent.planning.script.config.splitter
  callbacks: {}
  output_subdir: ${output_dir}/code/hydra
  overrides:
    hydra: []
    task:
    - group=./workspace/test/
    - cache.cache_path=/home/ke/code/GUMP/save_dir/caching/caching/2025.04.12.12.02.48/cache_dir_v1_1
    - cache.cache_metadata_path=/home/ke/code/GUMP/save_dir/caching/caching/2025.04.12.12.02.48/cache_dir_v1_1/metadata/cache_dir_v1_1_metadata_node_0.csv
    - cache.force_feature_computation=false
    - cache.use_cache_without_dataset=true
    - cache.versatile_caching=false
    - experiment_name=test_nuplan
    - py_func=train
    - seed=0
    - +training=training_nuplan_gump_v1_1
    - scenario_builder=nuplan
    - scenario_builder.data_root=/home/ke/code/GUMP/nuplan_data/dataset/nuplan-v1.1/splits/mini
    - scenario_builder.scenario_mapping.subsample_ratio_override=1
    - lightning.trainer.params.accelerator=gpu
    - lightning.trainer.params.max_epochs=15
    - lightning.trainer.params.max_time=14:32:00:00
    - lightning.trainer.params.precision=16
    - lightning.trainer.params.gradient_clip_val=5.0
    - lightning.trainer.params.strategy=ddp_find_unused_parameters_true
    - +lightning.trainer.params.val_check_interval=1.0
    - lightning.trainer.params.accumulate_grad_batches=2
    - data_loader.params.batch_size=1
    - data_loader.params.num_workers=8
    - worker=single_machine_thread_pool
    - model=gump_nuplan_lamma_sm_v1_1
    - optimizer=adamw
    - optimizer.lr=1e-4
    - optimizer.weight_decay=1e-3
    - lr_scheduler=multistep_lr
    - lr_scheduler.milestones=[8,13]
    - lr_scheduler.gamma=0.2
    - lightning.trainer.checkpoint.resume_training=false
    - scenario_filter=all_scenarios
    - +checkpoint.ckpt_path=null
    - +checkpoint.strict=True
    - +checkpoint.resume=False
  job:
    name: run_training
    override_dirname: +checkpoint.ckpt_path=null,+checkpoint.resume=False,+checkpoint.strict=True,+lightning.trainer.params.val_check_interval=1.0,+training=training_nuplan_gump_v1_1,cache.cache_metadata_path=/home/ke/code/GUMP/save_dir/caching/caching/2025.04.12.12.02.48/cache_dir_v1_1/metadata/cache_dir_v1_1_metadata_node_0.csv,cache.cache_path=/home/ke/code/GUMP/save_dir/caching/caching/2025.04.12.12.02.48/cache_dir_v1_1,cache.force_feature_computation=false,cache.use_cache_without_dataset=true,cache.versatile_caching=false,data_loader.params.batch_size=1,data_loader.params.num_workers=8,experiment_name=test_nuplan,group=./workspace/test/,lightning.trainer.checkpoint.resume_training=false,lightning.trainer.params.accelerator=gpu,lightning.trainer.params.accumulate_grad_batches=2,lightning.trainer.params.gradient_clip_val=5.0,lightning.trainer.params.max_epochs=15,lightning.trainer.params.max_time=14:32:00:00,lightning.trainer.params.precision=16,lightning.trainer.params.strategy=ddp_find_unused_parameters_true,lr_scheduler.gamma=0.2,lr_scheduler.milestones=[8,13],lr_scheduler=multistep_lr,model=gump_nuplan_lamma_sm_v1_1,optimizer.lr=1e-4,optimizer.weight_decay=1e-3,optimizer=adamw,py_func=train,scenario_builder.data_root=/home/ke/code/GUMP/nuplan_data/dataset/nuplan-v1.1/splits/mini,scenario_builder.scenario_mapping.subsample_ratio_override=1,scenario_builder=nuplan,scenario_filter=all_scenarios,seed=0,worker=single_machine_thread_pool
    id: ???
    num: ???
    config_name: horizon_training
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.1.0
    cwd: /home/ke/code/GUMP
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /home/ke/code/GUMP/nuplan_extent/planning/script/config
      schema: file
      provider: main
    - path: nuplan.planning.script.config.common
      schema: pkg
      provider: hydra.searchpath in main
    - path: nuplan.planning.script.config.training
      schema: pkg
      provider: hydra.searchpath in main
    - path: nuplan_extent.planning.script.experiments
      schema: pkg
      provider: hydra.searchpath in main
    - path: nuplan_extent.planning.script.config.training
      schema: pkg
      provider: hydra.searchpath in main
    - path: nuplan_extent.planning.script.config.common
      schema: pkg
      provider: hydra.searchpath in main
    - path: nuplan_extent.planning.script.config.common_cfg
      schema: pkg
      provider: hydra.searchpath in main
    - path: nuplan_extent.planning.script.config.splitter
      schema: pkg
      provider: hydra.searchpath in main
    - path: ''
      schema: structured
      provider: schema
    choices:
      training: training_nuplan_gump_v1_1
      common_cfg: gump
      ego_controller: null
      scenario_type_weights: default_scenario_type_weights
      data_augmentation_scheduler: null
      splitter: nuplan
      data_loader: default_data_loader
      warm_up_lr_scheduler: null
      lr_scheduler: multistep_lr
      optimizer: adamw
      lightning: default_lightning
      worker: single_machine_thread_pool
      model: gump_nuplan_lamma_sm_v1_1
      scenario_filter: all_scenarios
      scenario_builder: nuplan
      scenario_builder/scenario_mapping: nuplan_scenario_mapping
      scenario_builder/vehicle_parameters: nuplan_vehicle_parameters
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
